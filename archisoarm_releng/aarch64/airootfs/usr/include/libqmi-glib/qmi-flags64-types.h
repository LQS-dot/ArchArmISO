
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

#ifndef __LIBQMI_GLIB_FLAGS64_TYPES_H__
#define __LIBQMI_GLIB_FLAGS64_TYPES_H__
#include "qmi-flags64-dms.h"
#include "qmi-flags64-nas.h"
#include "qmi-flags64-loc.h"
#include "qmi-flags64-dsd.h"
#include "qmi-flags64-wds.h"

#include <glib-object.h>

G_BEGIN_DECLS

/* enumerations from "../libqmi/src/libqmi-glib/qmi-flags64-dms.h" */

#define __QMI_DMS_BAND_CAPABILITY_IS_FLAGS__

#if defined __QMI_DMS_BAND_CAPABILITY_IS_ENUM__
#error Only flags expected, QmiDmsBandCapability is an enumeration
#endif

/**
 * qmi_dms_band_capability_build_string_from_mask:
 * @mask: bitmask of QmiDmsBandCapability values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiDmsBandCapability in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.0
 */
gchar *qmi_dms_band_capability_build_string_from_mask (QmiDmsBandCapability mask);

#define __QMI_DMS_LTE_BAND_CAPABILITY_IS_FLAGS__

#if defined __QMI_DMS_LTE_BAND_CAPABILITY_IS_ENUM__
#error Only flags expected, QmiDmsLteBandCapability is an enumeration
#endif

/**
 * qmi_dms_lte_band_capability_build_string_from_mask:
 * @mask: bitmask of QmiDmsLteBandCapability values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiDmsLteBandCapability in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.0
 */
gchar *qmi_dms_lte_band_capability_build_string_from_mask (QmiDmsLteBandCapability mask);

/* enumerations from "../libqmi/src/libqmi-glib/qmi-flags64-dsd.h" */

#define __QMI_DSD_APN_TYPE_PREFERENCE_IS_FLAGS__

#if defined __QMI_DSD_APN_TYPE_PREFERENCE_IS_ENUM__
#error Only flags expected, QmiDsdApnTypePreference is an enumeration
#endif

/**
 * qmi_dsd_apn_type_preference_build_string_from_mask:
 * @mask: bitmask of QmiDsdApnTypePreference values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiDsdApnTypePreference in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.26
 */
gchar *qmi_dsd_apn_type_preference_build_string_from_mask (QmiDsdApnTypePreference mask);

#define __QMI_DSD_SO_MASK_IS_FLAGS__

#if defined __QMI_DSD_SO_MASK_IS_ENUM__
#error Only flags expected, QmiDsdSoMask is an enumeration
#endif

/**
 * qmi_dsd_so_mask_build_string_from_mask:
 * @mask: bitmask of QmiDsdSoMask values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiDsdSoMask in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.32
 */
gchar *qmi_dsd_so_mask_build_string_from_mask (QmiDsdSoMask mask);

/* enumerations from "../libqmi/src/libqmi-glib/qmi-flags64-loc.h" */

#define __QMI_LOC_EVENT_REGISTRATION_FLAG_IS_FLAGS__

#if defined __QMI_LOC_EVENT_REGISTRATION_FLAG_IS_ENUM__
#error Only flags expected, QmiLocEventRegistrationFlag is an enumeration
#endif

/**
 * qmi_loc_event_registration_flag_build_string_from_mask:
 * @mask: bitmask of QmiLocEventRegistrationFlag values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiLocEventRegistrationFlag in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.22
 */
gchar *qmi_loc_event_registration_flag_build_string_from_mask (QmiLocEventRegistrationFlag mask);

#define __QMI_LOC_SENSOR_DATA_USAGE_IS_FLAGS__

#if defined __QMI_LOC_SENSOR_DATA_USAGE_IS_ENUM__
#error Only flags expected, QmiLocSensorDataUsage is an enumeration
#endif

/**
 * qmi_loc_sensor_data_usage_build_string_from_mask:
 * @mask: bitmask of QmiLocSensorDataUsage values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiLocSensorDataUsage in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.22
 */
gchar *qmi_loc_sensor_data_usage_build_string_from_mask (QmiLocSensorDataUsage mask);

#define __QMI_LOC_DELETE_GNSS_DATA_IS_FLAGS__

#if defined __QMI_LOC_DELETE_GNSS_DATA_IS_ENUM__
#error Only flags expected, QmiLocDeleteGnssData is an enumeration
#endif

/**
 * qmi_loc_delete_gnss_data_build_string_from_mask:
 * @mask: bitmask of QmiLocDeleteGnssData values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiLocDeleteGnssData in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.22
 */
gchar *qmi_loc_delete_gnss_data_build_string_from_mask (QmiLocDeleteGnssData mask);

/* enumerations from "../libqmi/src/libqmi-glib/qmi-flags64-nas.h" */

#define __QMI_NAS_BAND_PREFERENCE_IS_FLAGS__

#if defined __QMI_NAS_BAND_PREFERENCE_IS_ENUM__
#error Only flags expected, QmiNasBandPreference is an enumeration
#endif

/**
 * qmi_nas_band_preference_build_string_from_mask:
 * @mask: bitmask of QmiNasBandPreference values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiNasBandPreference in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.0
 */
gchar *qmi_nas_band_preference_build_string_from_mask (QmiNasBandPreference mask);

#define __QMI_NAS_LTE_BAND_PREFERENCE_IS_FLAGS__

#if defined __QMI_NAS_LTE_BAND_PREFERENCE_IS_ENUM__
#error Only flags expected, QmiNasLteBandPreference is an enumeration
#endif

/**
 * qmi_nas_lte_band_preference_build_string_from_mask:
 * @mask: bitmask of QmiNasLteBandPreference values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiNasLteBandPreference in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.0
 */
gchar *qmi_nas_lte_band_preference_build_string_from_mask (QmiNasLteBandPreference mask);

/* enumerations from "../libqmi/src/libqmi-glib/qmi-flags64-wds.h" */

#define __QMI_WDS_APN_TYPE_MASK_IS_FLAGS__

#if defined __QMI_WDS_APN_TYPE_MASK_IS_ENUM__
#error Only flags expected, QmiWdsApnTypeMask is an enumeration
#endif

/**
 * qmi_wds_apn_type_mask_build_string_from_mask:
 * @mask: bitmask of QmiWdsApnTypeMask values.
 *
 * Builds a string containing a comma-separated list of nicknames for
 * each #QmiWdsApnTypeMask in @mask.
 *
 * Returns: (transfer full): a string with the list of nicknames, or %NULL if none given. The returned value should be freed with g_free().
 * Since: 1.30
 */
gchar *qmi_wds_apn_type_mask_build_string_from_mask (QmiWdsApnTypeMask mask);
G_END_DECLS

#endif /* __LIBQMI_GLIB_FLAGS64_TYPES_H__ */

/* Generated data ends here */

